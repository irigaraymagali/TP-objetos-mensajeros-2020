import mensajeria.*
import mensajeros.*

describe "Contratar y despedir mensajeros de la mensajeria"{
	test "Al contratar a un mensajero, la mensajeria lo agrega a sus mensajeros"{
		mensajeria.contratarMensajero(neo)
		mensajeria.contratarMensajero(chuckNorris)
		assert.equals(2,mensajeria.cantidadMensajeros())
	}
	test "Al despedir a un mensajero, la mensajeria lo quita a sus mensajeros"{
		mensajeria.contratarMensajero(neo)
		mensajeria.contratarMensajero(chuckNorris)
		mensajeria.despedirMensajero(chuckNorris)
		assert.equals(1,mensajeria.cantidadMensajeros())
	}
	test "Al despedir a todos los mensajero, la mensajeria quita a todos sus mensajeros"{
		mensajeria.contratarMensajero(neo)
		mensajeria.contratarMensajero(chuckNorris)
		mensajeria.despedirATodos()
		assert.equals(0,mensajeria.cantidadMensajeros())
	}
}

describe "Mensajeria grande, con sobrepeso y su facturacion"{
	
	test "La mensajeria es grande si tiene mas de 2 mensajeros" {
     mensajeria.contratarMensajero(neo)
     mensajeria.contratarMensajero(chuckNorris)
     mensajeria.contratarMensajero(roberto)
     assert.that(mensajeria.esGrande())
	}
    test "La mensajeria no es grande si tiene menos de 2 mensajeros" {
     mensajeria.contratarMensajero(neo)
     assert.notThat(mensajeria.esGrande())
	}
    test "La mensajeria no tiene sobrepeso si el promedio del peso de los mensajeros es menor a 500 Kg" {
     mensajeria.contratarMensajero(neo)
     mensajeria.contratarMensajero(chuckNorris)
     assert.notThat(mensajeria.tieneSobrepeso())
	}	
	test "La mensajeria tiene sobrepeso si el promedio del peso de los mensajeros es mayor a 500 Kg" {
     mensajeria.contratarMensajero(chuckNorris)
     assert.that(mensajeria.tieneSobrepeso())
	}	
	test "Se puede conocer la facturacion de la mensajeria" {
     mensajeria.contratarMensajero(neo)
     mensajeria.enviarPaquete(nuevoPaquete)
     assert.equals(10,mensajeria.facturacion())
	}	
}

describe "El peso del ultimo mensajero"{
	test "Se puede conocer el peso del ultimo mensajero de la mensajeria" {
     mensajeria.contratarMensajero(neo)
     mensajeria.contratarMensajero(nuevoMensajero)
     assert.equals(10,mensajeria.pesoUltimoMensajero())
	}
    //test "El peso del ultimo mensajero Neo es 0kg" {
     //mensajeria.contratarMensajero(neo)
    // assert.equals(0,mensajeria.pesoUltimoMensajero())
	//}		
}

describe "Entrega del paquete"{
	test "Neo, el primer mensajero puede entregar el paquetito" {
     mensajeria.contratarMensajero(neo)
     mensajeria.contratarMensajero(nuevoMensajero)
     assert.that(mensajeria.elPrimeroPuedeEntregarlo(paquetito))
	}
	test "Chuck Norris, el primer mensajero no puede entregar el paqueton viajero" {
     mensajeria.contratarMensajero(chuckNorris)
     mensajeria.contratarMensajero(nuevoMensajero)
     assert.that(mensajeria.elPrimeroPuedeEntregarlo(paquetonViajero))
	}
	
	test "Se puede conocer si un paquete puede ser entregado por mensajeria" {
     mensajeria.contratarMensajero(neo)
     mensajeria.contratarMensajero(nuevoMensajero)
     mensajeria.contratarMensajero(chuckNorris)
     assert.that(mensajeria.puedeEntregarPaquete(paquetito))
     assert.that(mensajeria.puedeEntregarPaquete(paquetonViajero))
	}
		
	test "Se puede conocer los mensajeros de la mensajeria que pueden entregar un paquete" {
     mensajeria.contratarMensajero(neo)
     mensajeria.contratarMensajero(chuckNorris)
     assert.equals([neo, chuckNorris],mensajeria.losQueLoPuedenEntregar(paquetito))
	}
	
	test "La mensajeria puede enviar un paquete si tiene un mensajero que lo pueda enviar"{
		mensajeria.contratarMensajero(neo)
		mensajeria.enviarPaquete(nuevoPaquete)
		assert.equals(1,mensajeria.cantidadPaquetesEnviados())
	}
	test "La mensajeria no puede enviar un paquete si no tiene un mensajero que lo pueda enviar"{
		mensajeria.enviarPaquete(paquetonViajero)	
		assert.equals(0,mensajeria.cantidadPaquetesEnviados())
		assert.equals(1,mensajeria.cantidadPaquetesPendientes())
	}	    
	            
    test "La mensajeria envia todos los paquetes"{
		mensajeria.contratarMensajero(neo)
		mensajeria.contratarMensajero(nuevoMensajero)
		mensajeria.agregarPaquete(paquetito)
		mensajeria.agregarPaquete(nuevoPaquete)
		mensajeria.enviarTodos()
		assert.equals(2,mensajeria.cantidadPaquetes())
	}

	   test "La mensajeria envia el paquete pendiente mas caro"{
		mensajeria.enviarPaquete(paquetonViajero)
		mensajeria.enviarElMasCaro()
		assert.equals(1,mensajeria.cantidadPaquetesPendientes())
	}          
	                 
}
	
	
	

	